==================================
Testing 3-say_my_name.py
==================================

This function prints both the first_name and last_name of a person.

Usage
=====

''say_my_name(...)'' prints "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("James", "Bond")
	My name is James Bond

::

	>>> say_my_name("Indiana", "Jones")
	My name is Indiana Jones

::

	>>> say_my_name("Tom", "Clancy")
	My name is Tom Clancy

The second argument last_name is optional. If no lastname is given,
an empty string is printed instead.

::

	>>> say_my_name("James")
	My name is James

Invalid Names
===============
The parameters, first_name and last_name must be string. Otherwise,
a TypeError is raised.

::

	>>> say_my_name(6, "James")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("LeBron", [7.6, 4.5, 3.2])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::

	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string
