=============================
Testing 4-print_square.py
=============================

The module defines a square-printing function ''print_square(size)''

Usage
=====

The squares are printed using '#' character. The parameter ''size''
represents the height and width of the square.

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(1)
	#

::

	>>> print_square(4)
	####
	####
	####
	####

::

	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

If size is zero, the function prints nothing

::

	>>> print_square(0)
	
Invalid Square sizes
======================
The argument size must be an integer. Otherwise, a TypeError is raised.

::

	>>> print_square("hello")
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(6.3)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

If size is less than zero, a ValueError is raised.

::

	>>> print_square(-2)
	Traceback (most recent call last):
	ValueError: size must be >= 0
