===============================
How to Use 0-add_integer.py
===============================
This python file has only one function named add_integer.

Usage
=====

''add_integer(..)'' The function returns the sum of two integers a and b.
The numbers must be strictly integer values.

Import the module and start your tests.
::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(4, 5)
	9

Addition of one float number and int number
::
	>>> add_integer(2.0, 3)
	5

Addition of one negative number and a positive one.
::
	>>> add_integer(-3, 2)
	-1

Addition of two floating point numbers.
::
	>>> add_integer(3.2, 5.4)
	8

Addition of a negative float and positive float
::
	>>> add_integer(3.2, -2.0)
	1

The second argument is optioal - by default is 98.
::
	>>> add_integer(2)
	100

Non-Numbers
===========
The function add_integers only takes integer values or floats, typecasted to int.
If either argument is non-integer or non-float, a TypeError is raised:

When parameter a is a string
::
	>>> add_integer("hello", 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

When parameter b input is a string.
::
	>>> add_integer(3, "world")
	Traceback (most recent call last):
	TypeError: b must be an integer

When parameter a is None.
::
	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer
